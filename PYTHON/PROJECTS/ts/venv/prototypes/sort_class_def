#!/usr/bin/zsh
#TODO: goal: intact source w/ all defs sorted by name
#TODO: need top section 1-first ^class hit

[[ ${#} -eq 0 ]] && echo "${0:t}: filename required" && exit
FN=${1}

typeset -A MAP

#CLIST=("${(f)$(grep --color=never -n "^class" ${FN})}")
#
#LAST=?
#for C in ${CLIST};do
#	LINE=$(cut -d: -f1 <<<${C})
#	NAME=$(cut -d: -f2 <<<${C})
#	[[ ${LAST} != "?" ]] && MAP[${N}]="sed -n "${LAST},$((LINE - 1))p" ${FN}"
#	[[ ${LINE} -ne ${LAST} ]] && LAST=${LINE} && N=$(sed -e "s/^class//" -e "s/^ *//" <<<${NAME} | cut -d'(' -f1)
#	echo "Processing class: ${N}" >&2
#done
#LINE=$(wc -l < ${FN})
#MAP[${N}]="sed -n "${LAST},$((LINE - 1))p" ${FN}" # last line
#
#for K in ${(k)MAP};do
#	eval ${MAP[${K}]} > ${K}.class
#done

#for C in *class;do
	DLIST=("${(f)$(grep --color=never -n "def " ${FN})}")
	LAST=?
	for D in ${DLIST};do
		LINE=$(cut -d: -f1 <<<${D})
		NAME=$(cut -d: -f2 <<<${D})
		[[ ${LAST} != "?" ]] && MAP[${N}]="sed -n "${LAST},$((LINE - 1))p" ${C}"
		[[ ${LINE} -ne ${LAST} ]] && LAST=${LINE} && N=$(sed -e "s/^ *def//" -e "s/^ *//" <<<${NAME} | cut -d'(' -f1)
		echo "Processing def: ${N}" >&2
	done
	LINE=$(wc -l < ${FN})
	MAP[${N}]="sed -n "${LAST},$((LINE - 1))p" ${FN}" # last line

	for K in ${(ok)MAP};do
		[[ ${K} =~ "__init__" ]] && eval ${MAP[${K}]} >> ${FN}.out
	done

	for K in ${(ok)MAP};do
		[[ ${K} =~ "__init__" ]] && continue
		eval ${MAP[${K}]} >> ${FN}.out
	done
#done
#
#/bin/rm -f *class
